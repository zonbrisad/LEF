   1               		.file	"LEF_Button.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	LEF_Button_new
  12               	LEF_Button_new:
  13               	.LFB10:
  14               		.file 1 "src/LEF/LEF_Button.c"
   1:src/LEF/LEF_Button.c **** /**
   2:src/LEF/LEF_Button.c ****  *---------------------------------------------------------------------------
   3:src/LEF/LEF_Button.c ****  * @brief    A button class
   4:src/LEF/LEF_Button.c ****  *
   5:src/LEF/LEF_Button.c ****  * @file     LEF_Button.c
   6:src/LEF/LEF_Button.c ****  * @author   Peter Malmberg <peter.malmberg@gmail.com>
   7:src/LEF/LEF_Button.c ****  * @version  0.01
   8:src/LEF/LEF_Button.c ****  * @date     2023-04-14
   9:src/LEF/LEF_Button.c ****  * @license  MIT
  10:src/LEF/LEF_Button.c ****  *
  11:src/LEF/LEF_Button.c ****  *---------------------------------------------------------------------------
  12:src/LEF/LEF_Button.c ****  *
  13:src/LEF/LEF_Button.c ****  *
  14:src/LEF/LEF_Button.c ****  */
  15:src/LEF/LEF_Button.c **** 
  16:src/LEF/LEF_Button.c **** #include <stdlib.h>
  17:src/LEF/LEF_Button.c **** 
  18:src/LEF/LEF_Button.c **** #include "LEF_Button.h"
  19:src/LEF/LEF_Button.c **** 
  20:src/LEF/LEF_Button.c **** 
  21:src/LEF/LEF_Button.c **** LEF_Button *LEF_Button_new() {
  15               		.loc 1 21 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  22:src/LEF/LEF_Button.c ****   return malloc(sizeof(LEF_Button));
  21               		.loc 1 22 0
  22 0000 83E0      		ldi r24,lo8(3)
  23 0002 90E0      		ldi r25,0
  24 0004 0C94 0000 		jmp malloc
  25               	.LVL0:
  26               		.cfi_endproc
  27               	.LFE10:
  29               	.global	LEF_Button_init
  31               	LEF_Button_init:
  32               	.LFB11:
  23:src/LEF/LEF_Button.c **** }
  24:src/LEF/LEF_Button.c **** 
  25:src/LEF/LEF_Button.c **** void LEF_Button_init(LEF_Button *button, LEF_EventId id) {
  33               		.loc 1 25 0
  34               		.cfi_startproc
  35               	.LVL1:
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  40 0008 FC01      		movw r30,r24
  26:src/LEF/LEF_Button.c **** 	button->id = id;
  41               		.loc 1 26 0
  42 000a 6083      		st Z,r22
  27:src/LEF/LEF_Button.c **** 	button->state = 0;
  43               		.loc 1 27 0
  44 000c 1182      		std Z+1,__zero_reg__
  28:src/LEF/LEF_Button.c **** 	button->cnt = 0;
  45               		.loc 1 28 0
  46 000e 1282      		std Z+2,__zero_reg__
  47 0010 0895      		ret
  48               		.cfi_endproc
  49               	.LFE11:
  51               	.global	LEF_Button_update
  53               	LEF_Button_update:
  54               	.LFB12:
  29:src/LEF/LEF_Button.c **** }
  30:src/LEF/LEF_Button.c **** 
  31:src/LEF/LEF_Button.c **** void LEF_Button_update(LEF_Button *button, uint8_t state) {
  55               		.loc 1 31 0
  56               		.cfi_startproc
  57               	.LVL2:
  58 0012 FF92      		push r15
  59               	.LCFI0:
  60               		.cfi_def_cfa_offset 3
  61               		.cfi_offset 15, -2
  62 0014 0F93      		push r16
  63               	.LCFI1:
  64               		.cfi_def_cfa_offset 4
  65               		.cfi_offset 16, -3
  66 0016 1F93      		push r17
  67               	.LCFI2:
  68               		.cfi_def_cfa_offset 5
  69               		.cfi_offset 17, -4
  70 0018 CF93      		push r28
  71               	.LCFI3:
  72               		.cfi_def_cfa_offset 6
  73               		.cfi_offset 28, -5
  74 001a DF93      		push r29
  75               	.LCFI4:
  76               		.cfi_def_cfa_offset 7
  77               		.cfi_offset 29, -6
  78 001c 00D0      		rcall .
  79               	.LCFI5:
  80               		.cfi_def_cfa_offset 9
  81 001e CDB7      		in r28,__SP_L__
  82 0020 DEB7      		in r29,__SP_H__
  83               	.LCFI6:
  84               		.cfi_def_cfa_register 28
  85               	/* prologue: function */
  86               	/* frame size = 2 */
  87               	/* stack size = 7 */
  88               	.L__stack_usage = 7
  89 0022 8C01      		movw r16,r24
  90 0024 F62E      		mov r15,r22
  32:src/LEF/LEF_Button.c **** 	LEF_queue_element qe;
  33:src/LEF/LEF_Button.c **** 	qe.id = button->id;
  91               		.loc 1 33 0
  92 0026 FC01      		movw r30,r24
  93 0028 8081      		ld r24,Z
  94               	.LVL3:
  95 002a 8983      		std Y+1,r24
  34:src/LEF/LEF_Button.c **** 	
  35:src/LEF/LEF_Button.c **** 	// store button state
  36:src/LEF/LEF_Button.c **** 	button->state = (button->state << 1);
  96               		.loc 1 36 0
  97 002c 8181      		ldd r24,Z+1
  98 002e 880F      		lsl r24
  37:src/LEF/LEF_Button.c **** 	if (state)
  99               		.loc 1 37 0
 100 0030 6623      		tst r22
 101 0032 01F0      		breq .L10
  38:src/LEF/LEF_Button.c **** 		button->state |= 1;
 102               		.loc 1 38 0
 103 0034 8160      		ori r24,lo8(1)
 104 0036 F801      		movw r30,r16
 105               	.L10:
 106 0038 8183      		std Z+1,r24
 107 003a 8770      		andi r24,lo8(7)
  39:src/LEF/LEF_Button.c **** 	else
  40:src/LEF/LEF_Button.c **** 		button->state &= ~1;
  41:src/LEF/LEF_Button.c **** 	
  42:src/LEF/LEF_Button.c **** 
  43:src/LEF/LEF_Button.c **** 	// detect button press event
  44:src/LEF/LEF_Button.c **** 	if ((button->state & 0x7) == 3) {
 108               		.loc 1 44 0
 109 003c 8330      		cpi r24,lo8(3)
 110 003e 01F0      		breq .L12
  45:src/LEF/LEF_Button.c **** 		qe.func=1;
  46:src/LEF/LEF_Button.c **** 		LEF_QueueStdSend(&qe);
  47:src/LEF/LEF_Button.c **** 	}
  48:src/LEF/LEF_Button.c **** 
  49:src/LEF/LEF_Button.c **** 	// detect button release event
  50:src/LEF/LEF_Button.c **** 	if ((button->state & 0x7) == 4) {
 111               		.loc 1 50 0
 112 0040 8430      		cpi r24,lo8(4)
 113 0042 01F0      		breq .L13
 114               	.LVL4:
 115               	.L7:
  51:src/LEF/LEF_Button.c **** 		qe.func=2;
  52:src/LEF/LEF_Button.c **** 		LEF_QueueStdSend(&qe);
  53:src/LEF/LEF_Button.c **** 	}
  54:src/LEF/LEF_Button.c **** 
  55:src/LEF/LEF_Button.c **** 	// detect long press event
  56:src/LEF/LEF_Button.c **** 	if (state) {
  57:src/LEF/LEF_Button.c **** 		if (button->cnt < 252)
 116               		.loc 1 57 0
 117 0044 F801      		movw r30,r16
  56:src/LEF/LEF_Button.c **** 		if (button->cnt < 252)
 118               		.loc 1 56 0
 119 0046 FF20      		tst r15
 120 0048 01F0      		breq .L8
 121               		.loc 1 57 0
 122 004a 8281      		ldd r24,Z+2
 123 004c 8C3F      		cpi r24,lo8(-4)
 124 004e 00F4      		brsh .L3
  58:src/LEF/LEF_Button.c **** 			button->cnt++;
 125               		.loc 1 58 0
 126 0050 8F5F      		subi r24,lo8(-(1))
 127 0052 8283      		std Z+2,r24
  59:src/LEF/LEF_Button.c **** 		
  60:src/LEF/LEF_Button.c **** 	  if (button->cnt==250) {
 128               		.loc 1 60 0
 129 0054 8A3F      		cpi r24,lo8(-6)
 130 0056 01F0      		breq .L14
 131               	.L3:
 132               	/* epilogue start */
  61:src/LEF/LEF_Button.c **** 			qe.func = 3;
  62:src/LEF/LEF_Button.c **** 	 	  LEF_QueueStdSend(&qe);
  63:src/LEF/LEF_Button.c **** 		  //button->cnt=0;
  64:src/LEF/LEF_Button.c **** 	  }
  65:src/LEF/LEF_Button.c **** 
  66:src/LEF/LEF_Button.c **** 	} else
  67:src/LEF/LEF_Button.c **** 		button->cnt = 0;
  68:src/LEF/LEF_Button.c **** 
  69:src/LEF/LEF_Button.c **** }
 133               		.loc 1 69 0
 134 0058 0F90      		pop __tmp_reg__
 135 005a 0F90      		pop __tmp_reg__
 136 005c DF91      		pop r29
 137 005e CF91      		pop r28
 138 0060 1F91      		pop r17
 139 0062 0F91      		pop r16
 140               	.LVL5:
 141 0064 FF90      		pop r15
 142               	.LVL6:
 143 0066 0895      		ret
 144               	.LVL7:
 145               	.L8:
  67:src/LEF/LEF_Button.c **** 
 146               		.loc 1 67 0
 147 0068 1282      		std Z+2,__zero_reg__
 148               	/* epilogue start */
 149               		.loc 1 69 0
 150 006a 0F90      		pop __tmp_reg__
 151 006c 0F90      		pop __tmp_reg__
 152 006e DF91      		pop r29
 153 0070 CF91      		pop r28
 154 0072 1F91      		pop r17
 155 0074 0F91      		pop r16
 156               	.LVL8:
 157 0076 FF90      		pop r15
 158               	.LVL9:
 159 0078 0895      		ret
 160               	.LVL10:
 161               	.L14:
  61:src/LEF/LEF_Button.c **** 			qe.func = 3;
 162               		.loc 1 61 0
 163 007a 83E0      		ldi r24,lo8(3)
 164 007c 8A83      		std Y+2,r24
  62:src/LEF/LEF_Button.c **** 		  //button->cnt=0;
 165               		.loc 1 62 0
 166 007e CE01      		movw r24,r28
 167 0080 0196      		adiw r24,1
 168 0082 0E94 0000 		call LEF_QueueStdSend
 169               	.LVL11:
 170 0086 00C0      		rjmp .L3
 171               	.L12:
  45:src/LEF/LEF_Button.c **** 		LEF_QueueStdSend(&qe);
 172               		.loc 1 45 0
 173 0088 81E0      		ldi r24,lo8(1)
 174 008a 8A83      		std Y+2,r24
  46:src/LEF/LEF_Button.c **** 	}
 175               		.loc 1 46 0
 176 008c CE01      		movw r24,r28
 177 008e 0196      		adiw r24,1
 178 0090 0E94 0000 		call LEF_QueueStdSend
 179               	.LVL12:
 180 0094 F801      		movw r30,r16
 181 0096 8181      		ldd r24,Z+1
 182 0098 8770      		andi r24,lo8(7)
  50:src/LEF/LEF_Button.c **** 		qe.func=2;
 183               		.loc 1 50 0
 184 009a 8430      		cpi r24,lo8(4)
 185 009c 01F4      		brne .L7
 186               	.L13:
  51:src/LEF/LEF_Button.c **** 		LEF_QueueStdSend(&qe);
 187               		.loc 1 51 0
 188 009e 82E0      		ldi r24,lo8(2)
 189 00a0 8A83      		std Y+2,r24
  52:src/LEF/LEF_Button.c **** 	}
 190               		.loc 1 52 0
 191 00a2 CE01      		movw r24,r28
 192 00a4 0196      		adiw r24,1
 193 00a6 0E94 0000 		call LEF_QueueStdSend
 194               	.LVL13:
 195 00aa 00C0      		rjmp .L7
 196               		.cfi_endproc
 197               	.LFE12:
 199               	.global	LEF_Button_free
 201               	LEF_Button_free:
 202               	.LFB13:
  70:src/LEF/LEF_Button.c ****  
  71:src/LEF/LEF_Button.c **** void LEF_Button_free(LEF_Button *button) {  
 203               		.loc 1 71 0
 204               		.cfi_startproc
 205               	.LVL14:
 206               	/* prologue: function */
 207               	/* frame size = 0 */
 208               	/* stack size = 0 */
 209               	.L__stack_usage = 0
  72:src/LEF/LEF_Button.c ****   free(button);
 210               		.loc 1 72 0
 211 00ac 0C94 0000 		jmp free
 212               	.LVL15:
 213               		.cfi_endproc
 214               	.LFE13:
 216               	.Letext0:
 217               		.file 2 "/usr/lib/avr/include/stdint.h"
 218               		.file 3 "src/LEF/LEF_Queue.h"
 219               		.file 4 "src/LEF/LEF_Button.h"
 220               		.file 5 "/usr/lib/avr/include/stdlib.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 LEF_Button.c
     /tmp/ccllvDB2.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccllvDB2.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccllvDB2.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccllvDB2.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccllvDB2.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccllvDB2.s:12     .text:0000000000000000 LEF_Button_new
     /tmp/ccllvDB2.s:31     .text:0000000000000008 LEF_Button_init
     /tmp/ccllvDB2.s:53     .text:0000000000000012 LEF_Button_update
     /tmp/ccllvDB2.s:201    .text:00000000000000ac LEF_Button_free

UNDEFINED SYMBOLS
malloc
LEF_QueueStdSend
free
